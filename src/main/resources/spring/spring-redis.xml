<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/cache
         http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    <!--<cache:annotation-driven cache-manager="redisCacheManager"/>-->
    <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"></property>
        <property name="maxTotal" value="${redis.maxTotal}"></property>
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"></property>
    </bean>
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <!--<property name="hostName" value="127.0.0.1"></property>-->
        <property name="hostName" value="${redis.hostName}"></property>
        <property name="port" value="${redis.port}"></property>
        <property name="poolConfig" ref="redisPoolConfig"></property>
        <property name="usePool" value="true" />
    </bean>
    <bean id="jdkSerializationRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="valueSerializer" ref="stringRedisSerializer"/>
    </bean>
    <!--<bean id="redisMsgListener" class="com.liuyu7177.zuoriweilai.model.temps.RedisMessageListener">-->
        <!--<property name="redisTemplate" ref="redisTemplate"/>-->
    <!--</bean>-->
    <!--<bean id="topicContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer" destroy-method="destroy">-->
        <!--<property name="connectionFactory" ref="connectionFactory"/>-->
        <!--<property name="taskExecutor">-->
            <!--<bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">-->
                <!--<property name="corePoolSize" value="3"/>-->
            <!--</bean>-->
        <!--</property>-->
        <!--<property name="messageListeners">-->
            <!--<map>-->
                <!--<entry key-ref="redisMsgListener">-->
                    <!--<bean class="org.springframework.data.redis.listener.ChannelTopic">-->
                        <!--<constructor-arg value="chat"/>-->
                    <!--</bean>-->
                <!--</entry>-->
            <!--</map>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">-->
        <!--<constructor-arg index="0" ref="redisTemplate"/>-->
        <!--<property name="defaultExpiration" value="600"/>-->
        <!--<property name="cacheNames">-->
            <!--<list>-->
                <!--<value>redisCacheManager</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
</beans>